@inject ModalService ModalService

<Button @onclick="ShowModal" Class="d-flex p-0 rounded-circle">
   <Icon Name="IconName.PlusLg" Color="IconColor.Success" Class="rounded-circle bg-success-subtle px-3 p-3" />
</Button>

<Modal @ref="InputModal" title="Adding a new item" >
   
   <BodyTemplate>
      <EditForm Model="Input"  OnValidSubmit="ConfirmInput" FormName="InputElement">
         
         <CurrencyInput TValue="int" @bind-Value="Input.Ammount"  CurrencySign="$" AllowNegativeNumbers  />
         title
         category
         ammount
         dateTime (default to now)

         <Button Type="ButtonType.Reset" role="button">Cancel</Button>
         <Button  Type="ButtonType.Submit">Confirm</Button>
      </EditForm>
   </BodyTemplate>
</Modal>


@code {
   Modal InputModal = default!;
   InputModel Input = new();

   private async Task ShowModal() {
      await InputModal.ShowAsync();
   }
   private async Task CloseModal() {
      await InputModal.ShowAsync();
   }
   private async Task CancelInput() {
      await InputModal.ShowAsync();
   }
   private async Task ConfirmInput() {
      await InputModal.ShowAsync();
   }

   private sealed class InputModel {
      public string data {get; set;} = "";
      public int Ammount {get; set;}
   }
}